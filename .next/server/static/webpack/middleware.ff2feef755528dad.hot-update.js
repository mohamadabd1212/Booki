"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./middleware.js":
/*!***********************!*\
  !*** ./middleware.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jose */ \"(middleware)/./node_modules/jose/dist/webapi/jwt/verify.js\");\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/headers */ \"(middleware)/./node_modules/next/dist/esm/api/headers.js\");\n\n\n\nconst JWT_SECRET = process.env.JWT_SECRET;\nconst ROLE_CLAIM = 'http://schemas.microsoft.com/ws/2008/06/identity/claims/role';\nconst VERIFIED_CLAIM = 'http://schemas.xmlsoap.org/ws/2009/09/identity/claims/actor';\nasync function verifyToken(token) {\n    try {\n        return await (0,jose__WEBPACK_IMPORTED_MODULE_2__.jwtVerify)(token, new TextEncoder().encode(JWT_SECRET));\n    } catch  {\n        return null;\n    }\n}\nfunction clearCookies(response, cookieNames) {\n    cookieNames.forEach((name)=>response.cookies.set(name, '', {\n            maxAge: 0,\n            path: '/'\n        }));\n}\nasync function middleware(req) {\n    if (req.nextUrl.pathname.startsWith('/api')) {\n        const referer = req.headers.get('referer');\n        const url = new URL(req.url);\n        const baseOrigin = `${url.protocol}//${url.host}`;\n        console.log(baseOrigin);\n        const isAllowed = referer?.startsWith(baseOrigin);\n        if (!isAllowed) {\n            return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse('Forbidden: API access is only allowed from site pages.', {\n                status: 403\n            });\n        }\n    }\n    const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_1__.cookies)();\n    const tokenCookie = cookieStore.get('token');\n    const otpTokenCookie = cookieStore.get('otp_token');\n    const resetTokenCookie = cookieStore.get('reset');\n    const pathname = req.nextUrl.pathname;\n    const tokensPresent = [\n        tokenCookie,\n        otpTokenCookie,\n        resetTokenCookie\n    ].filter(Boolean);\n    const response = next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n    if (tokensPresent.length > 1) {\n        clearCookies(response, [\n            'token',\n            'otp_token',\n            'reset'\n        ]);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL('/un/login', req.url));\n    }\n    const isAuthPage = [\n        '/un/login',\n        '/un/register'\n    ].some((path)=>pathname.startsWith(path));\n    const isOtpPage = pathname.startsWith('/un/otpValidatePassword');\n    const isResetPage = pathname.startsWith('/un/resetPassword');\n    const isConfirmEmailPage = pathname.startsWith('/User/VerifyEmail');\n    const isProtectedPage = pathname.startsWith('/User') || pathname.startsWith('/Admin');\n    async function verifyOrClear(tokenCookie) {\n        if (!tokenCookie) return null;\n        const decoded = await verifyToken(tokenCookie.value);\n        if (!decoded) {\n            clearCookies(response, [\n                'token',\n                'otp_token',\n                'reset'\n            ]);\n            return null;\n        }\n        return decoded;\n    }\n    // OTP page requires valid otp_token\n    if (isOtpPage) {\n        const decoded = await verifyOrClear(otpTokenCookie);\n        if (!decoded) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL('/un/login', req.url));\n        return response;\n    }\n    // Reset page requires valid reset token\n    if (isResetPage) {\n        const decoded = await verifyOrClear(resetTokenCookie);\n        if (!decoded) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL('/un/login', req.url));\n        return response;\n    }\n    // Auth pages\n    if (isAuthPage) {\n        clearCookies(response, [\n            'otp_token',\n            'reset'\n        ]);\n        if (tokenCookie) {\n            const decoded = await verifyOrClear(tokenCookie);\n            if (!decoded) return response; // âœ… Just stay on login page after clearing\n            const roles = decoded.payload[ROLE_CLAIM] || [];\n            const role = Array.isArray(roles) ? roles[0] : roles;\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL(`/${role}/dashboard`, req.url));\n        }\n        return response;\n    }\n    // Protected pages\n    if (isProtectedPage) {\n        const decoded = await verifyOrClear(tokenCookie);\n        if (!decoded) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL('/un/login', req.url));\n        const roles = decoded.payload[ROLE_CLAIM] || [];\n        const role = Array.isArray(roles) ? roles[0] : roles;\n        if (isConfirmEmailPage) {\n            const isVerified = decoded.payload[VERIFIED_CLAIM];\n            if (isVerified === 'True') {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL(`/${role}/dashboard`, req.url));\n            }\n            return response;\n        }\n        // Role-based restriction\n        if (pathname.startsWith('/Admin') && role !== 'Admin' || pathname.startsWith('/User') && role !== 'User') {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL(`/${role}/dashboard`, req.url));\n        }\n        return response;\n    }\n    return response;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUN6QixPQUFPN0QscURBQVlBLENBQUM4QyxRQUFRLENBQUMsSUFBSWpCLElBQUksQ0FBQyxDQUFDLEVBQUU2QixLQUFLLFVBQVUsQ0FBQyxFQUFFckMsSUFBSU8sR0FBRztZQUNwRTtZQUNBLE9BQU9mO1FBQ1Q7UUFFQSx5QkFBeUI7UUFDekIsSUFDRSxTQUFVVyxVQUFVLENBQUMsYUFBYWtDLFNBQVMsV0FDMUNuQyxTQUFTQyxVQUFVLENBQUMsWUFBWWtDLFNBQVMsUUFDMUM7WUFDQSxPQUFPMUQscURBQVlBLENBQUM4QyxRQUFRLENBQUMsSUFBSWpCLElBQUksQ0FBQyxDQUFDLEVBQUU2QixLQUFLLFVBQVUsQ0FBQyxFQUFFckMsSUFBSU8sR0FBRztRQUNwRTtRQUVBLE9BQU9mO0lBQ1Q7SUFFQSxPQUFPQTtBQUNUIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXE1vaGFtYWRcXE9uZURyaXZlXFxEZXNrdG9wXFxSdWhhbl9OZXh0K2FzcFxccnVoYW5cXG1pZGRsZXdhcmUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xyXG5pbXBvcnQgeyBqd3RWZXJpZnkgfSBmcm9tICdqb3NlJztcclxuaW1wb3J0IHsgY29va2llcyB9IGZyb20gJ25leHQvaGVhZGVycyc7XHJcblxyXG5jb25zdCBKV1RfU0VDUkVUID0gcHJvY2Vzcy5lbnYuSldUX1NFQ1JFVDtcclxuY29uc3QgUk9MRV9DTEFJTSA9ICdodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUnO1xyXG5jb25zdCBWRVJJRklFRF9DTEFJTSA9ICdodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA5LzA5L2lkZW50aXR5L2NsYWltcy9hY3Rvcic7XHJcblxyXG5hc3luYyBmdW5jdGlvbiB2ZXJpZnlUb2tlbih0b2tlbikge1xyXG4gIHRyeSB7XHJcbiAgICByZXR1cm4gYXdhaXQgand0VmVyaWZ5KHRva2VuLCBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUoSldUX1NFQ1JFVCkpO1xyXG4gIH0gY2F0Y2gge1xyXG4gICAgcmV0dXJuIG51bGw7XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBjbGVhckNvb2tpZXMocmVzcG9uc2UsIGNvb2tpZU5hbWVzKSB7XHJcbiAgY29va2llTmFtZXMuZm9yRWFjaChuYW1lID0+XHJcbiAgICByZXNwb25zZS5jb29raWVzLnNldChuYW1lLCAnJywge1xyXG4gICAgICBtYXhBZ2U6IDAsXHJcbiAgICAgIHBhdGg6ICcvJyxcclxuICAgIH0pXHJcbiAgKTtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1pZGRsZXdhcmUocmVxKSB7XHJcbiAgaWYgKHJlcS5uZXh0VXJsLnBhdGhuYW1lLnN0YXJ0c1dpdGgoJy9hcGknKSkge1xyXG4gIGNvbnN0IHJlZmVyZXIgPSByZXEuaGVhZGVycy5nZXQoJ3JlZmVyZXInKTtcclxuICBjb25zdCB1cmwgPSBuZXcgVVJMKHJlcS51cmwpO1xyXG4gIGNvbnN0IGJhc2VPcmlnaW4gPSBgJHt1cmwucHJvdG9jb2x9Ly8ke3VybC5ob3N0fWA7XHJcbiAgY29uc29sZS5sb2coYmFzZU9yaWdpbilcclxuXHJcbiAgY29uc3QgaXNBbGxvd2VkID0gcmVmZXJlcj8uc3RhcnRzV2l0aChiYXNlT3JpZ2luKTtcclxuXHJcbiAgaWYgKCFpc0FsbG93ZWQpIHtcclxuICAgIHJldHVybiBuZXcgTmV4dFJlc3BvbnNlKCdGb3JiaWRkZW46IEFQSSBhY2Nlc3MgaXMgb25seSBhbGxvd2VkIGZyb20gc2l0ZSBwYWdlcy4nLCB7XHJcbiAgICAgIHN0YXR1czogNDAzLFxyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiAgY29uc3QgY29va2llU3RvcmUgPSBhd2FpdCBjb29raWVzKCk7XHJcbiAgY29uc3QgdG9rZW5Db29raWUgPSBjb29raWVTdG9yZS5nZXQoJ3Rva2VuJyk7XHJcbiAgY29uc3Qgb3RwVG9rZW5Db29raWUgPSBjb29raWVTdG9yZS5nZXQoJ290cF90b2tlbicpO1xyXG4gIGNvbnN0IHJlc2V0VG9rZW5Db29raWUgPSBjb29raWVTdG9yZS5nZXQoJ3Jlc2V0Jyk7XHJcbiAgY29uc3QgcGF0aG5hbWUgPSByZXEubmV4dFVybC5wYXRobmFtZTtcclxuICBjb25zdCB0b2tlbnNQcmVzZW50ID0gW3Rva2VuQ29va2llLCBvdHBUb2tlbkNvb2tpZSwgcmVzZXRUb2tlbkNvb2tpZV0uZmlsdGVyKEJvb2xlYW4pO1xyXG4gIGNvbnN0IHJlc3BvbnNlID0gTmV4dFJlc3BvbnNlLm5leHQoKTtcclxuXHJcbiAgaWYgKHRva2Vuc1ByZXNlbnQubGVuZ3RoID4gMSkge1xyXG4gICAgY2xlYXJDb29raWVzKHJlc3BvbnNlLCBbJ3Rva2VuJywgJ290cF90b2tlbicsICdyZXNldCddKTtcclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QobmV3IFVSTCgnL3VuL2xvZ2luJywgcmVxLnVybCkpO1xyXG4gIH1cclxuXHJcbiAgY29uc3QgaXNBdXRoUGFnZSA9IFsnL3VuL2xvZ2luJywgJy91bi9yZWdpc3RlciddLnNvbWUocGF0aCA9PiBwYXRobmFtZS5zdGFydHNXaXRoKHBhdGgpKTtcclxuICBjb25zdCBpc090cFBhZ2UgPSBwYXRobmFtZS5zdGFydHNXaXRoKCcvdW4vb3RwVmFsaWRhdGVQYXNzd29yZCcpO1xyXG4gIGNvbnN0IGlzUmVzZXRQYWdlID0gcGF0aG5hbWUuc3RhcnRzV2l0aCgnL3VuL3Jlc2V0UGFzc3dvcmQnKTtcclxuICBjb25zdCBpc0NvbmZpcm1FbWFpbFBhZ2UgPSBwYXRobmFtZS5zdGFydHNXaXRoKCcvVXNlci9WZXJpZnlFbWFpbCcpO1xyXG4gIGNvbnN0IGlzUHJvdGVjdGVkUGFnZSA9IHBhdGhuYW1lLnN0YXJ0c1dpdGgoJy9Vc2VyJykgfHwgcGF0aG5hbWUuc3RhcnRzV2l0aCgnL0FkbWluJyk7XHJcblxyXG4gIGFzeW5jIGZ1bmN0aW9uIHZlcmlmeU9yQ2xlYXIodG9rZW5Db29raWUpIHtcclxuICAgIGlmICghdG9rZW5Db29raWUpIHJldHVybiBudWxsO1xyXG4gICAgY29uc3QgZGVjb2RlZCA9IGF3YWl0IHZlcmlmeVRva2VuKHRva2VuQ29va2llLnZhbHVlKTtcclxuICAgIGlmICghZGVjb2RlZCkge1xyXG4gICAgICBjbGVhckNvb2tpZXMocmVzcG9uc2UsIFsndG9rZW4nLCAnb3RwX3Rva2VuJywgJ3Jlc2V0J10pO1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuICAgIHJldHVybiBkZWNvZGVkO1xyXG4gIH1cclxuXHJcbiAgLy8gT1RQIHBhZ2UgcmVxdWlyZXMgdmFsaWQgb3RwX3Rva2VuXHJcbiAgaWYgKGlzT3RwUGFnZSkge1xyXG4gICAgY29uc3QgZGVjb2RlZCA9IGF3YWl0IHZlcmlmeU9yQ2xlYXIob3RwVG9rZW5Db29raWUpO1xyXG4gICAgaWYgKCFkZWNvZGVkKSByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KG5ldyBVUkwoJy91bi9sb2dpbicsIHJlcS51cmwpKTtcclxuICAgIHJldHVybiByZXNwb25zZTtcclxuICB9XHJcblxyXG4gIC8vIFJlc2V0IHBhZ2UgcmVxdWlyZXMgdmFsaWQgcmVzZXQgdG9rZW5cclxuICBpZiAoaXNSZXNldFBhZ2UpIHtcclxuICAgIGNvbnN0IGRlY29kZWQgPSBhd2FpdCB2ZXJpZnlPckNsZWFyKHJlc2V0VG9rZW5Db29raWUpO1xyXG4gICAgaWYgKCFkZWNvZGVkKSByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KG5ldyBVUkwoJy91bi9sb2dpbicsIHJlcS51cmwpKTtcclxuICAgIHJldHVybiByZXNwb25zZTtcclxuICB9XHJcblxyXG4gIC8vIEF1dGggcGFnZXNcclxuICBpZiAoaXNBdXRoUGFnZSkge1xyXG4gICAgY2xlYXJDb29raWVzKHJlc3BvbnNlLCBbJ290cF90b2tlbicsICdyZXNldCddKTtcclxuXHJcbiAgICBpZiAodG9rZW5Db29raWUpIHtcclxuICAgICAgY29uc3QgZGVjb2RlZCA9IGF3YWl0IHZlcmlmeU9yQ2xlYXIodG9rZW5Db29raWUpO1xyXG4gICAgICBpZiAoIWRlY29kZWQpIHJldHVybiByZXNwb25zZTsgLy8g4pyFIEp1c3Qgc3RheSBvbiBsb2dpbiBwYWdlIGFmdGVyIGNsZWFyaW5nXHJcblxyXG4gICAgICBjb25zdCByb2xlcyA9IGRlY29kZWQucGF5bG9hZFtST0xFX0NMQUlNXSB8fCBbXTtcclxuICAgICAgY29uc3Qgcm9sZSA9IEFycmF5LmlzQXJyYXkocm9sZXMpID8gcm9sZXNbMF0gOiByb2xlcztcclxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdChuZXcgVVJMKGAvJHtyb2xlfS9kYXNoYm9hcmRgLCByZXEudXJsKSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gcmVzcG9uc2U7XHJcbiAgfVxyXG5cclxuICAvLyBQcm90ZWN0ZWQgcGFnZXNcclxuICBpZiAoaXNQcm90ZWN0ZWRQYWdlKSB7XHJcbiAgICBjb25zdCBkZWNvZGVkID0gYXdhaXQgdmVyaWZ5T3JDbGVhcih0b2tlbkNvb2tpZSk7XHJcbiAgICBpZiAoIWRlY29kZWQpIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QobmV3IFVSTCgnL3VuL2xvZ2luJywgcmVxLnVybCkpO1xyXG5cclxuICAgIGNvbnN0IHJvbGVzID0gZGVjb2RlZC5wYXlsb2FkW1JPTEVfQ0xBSU1dIHx8IFtdO1xyXG4gICAgY29uc3Qgcm9sZSA9IEFycmF5LmlzQXJyYXkocm9sZXMpID8gcm9sZXNbMF0gOiByb2xlcztcclxuXHJcbiAgICBpZiAoaXNDb25maXJtRW1haWxQYWdlKSB7XHJcbiAgICAgIGNvbnN0IGlzVmVyaWZpZWQgPSBkZWNvZGVkLnBheWxvYWRbVkVSSUZJRURfQ0xBSU1dO1xyXG4gICAgICBpZiAoaXNWZXJpZmllZCA9PT0gJ1RydWUnKSB7XHJcbiAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdChuZXcgVVJMKGAvJHtyb2xlfS9kYXNoYm9hcmRgLCByZXEudXJsKSk7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIHJlc3BvbnNlO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFJvbGUtYmFzZWQgcmVzdHJpY3Rpb25cclxuICAgIGlmIChcclxuICAgICAgKHBhdGhuYW1lLnN0YXJ0c1dpdGgoJy9BZG1pbicpICYmIHJvbGUgIT09ICdBZG1pbicpIHx8XHJcbiAgICAgIChwYXRobmFtZS5zdGFydHNXaXRoKCcvVXNlcicpICYmIHJvbGUgIT09ICdVc2VyJylcclxuICAgICkge1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KG5ldyBVUkwoYC8ke3JvbGV9L2Rhc2hib2FyZGAsIHJlcS51cmwpKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gcmVzcG9uc2U7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gcmVzcG9uc2U7XHJcbn1cclxuIl0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsImp3dFZlcmlmeSIsImNvb2tpZXMiLCJKV1RfU0VDUkVUIiwicHJvY2VzcyIsImVudiIsIlJPTEVfQ0xBSU0iLCJWRVJJRklFRF9DTEFJTSIsInZlcmlmeVRva2VuIiwidG9rZW4iLCJUZXh0RW5jb2RlciIsImVuY29kZSIsImNsZWFyQ29va2llcyIsInJlc3BvbnNlIiwiY29va2llTmFtZXMiLCJmb3JFYWNoIiwibmFtZSIsInNldCIsIm1heEFnZSIsInBhdGgiLCJtaWRkbGV3YXJlIiwicmVxIiwibmV4dFVybCIsInBhdGhuYW1lIiwic3RhcnRzV2l0aCIsInJlZmVyZXIiLCJoZWFkZXJzIiwiZ2V0IiwidXJsIiwiVVJMIiwiYmFzZU9yaWdpbiIsInByb3RvY29sIiwiaG9zdCIsImNvbnNvbGUiLCJsb2ciLCJpc0FsbG93ZWQiLCJzdGF0dXMiLCJjb29raWVTdG9yZSIsInRva2VuQ29va2llIiwib3RwVG9rZW5Db29raWUiLCJyZXNldFRva2VuQ29va2llIiwidG9rZW5zUHJlc2VudCIsImZpbHRlciIsIkJvb2xlYW4iLCJuZXh0IiwibGVuZ3RoIiwicmVkaXJlY3QiLCJpc0F1dGhQYWdlIiwic29tZSIsImlzT3RwUGFnZSIsImlzUmVzZXRQYWdlIiwiaXNDb25maXJtRW1haWxQYWdlIiwiaXNQcm90ZWN0ZWRQYWdlIiwidmVyaWZ5T3JDbGVhciIsImRlY29kZWQiLCJ2YWx1ZSIsInJvbGVzIiwicGF5bG9hZCIsInJvbGUiLCJBcnJheSIsImlzQXJyYXkiLCJpc1ZlcmlmaWVkIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./middleware.js\n");

/***/ })

});