"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./middleware.js":
/*!***********************!*\
  !*** ./middleware.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jose */ \"(middleware)/./node_modules/jose/dist/webapi/jwt/verify.js\");\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/headers */ \"(middleware)/./node_modules/next/dist/esm/api/headers.js\");\n\n\n\nconst JWT_SECRET = process.env.JWT_SECRET;\nconst ROLE_CLAIM = 'http://schemas.microsoft.com/ws/2008/06/identity/claims/role';\nconst VERIFIED_CLAIM = 'http://schemas.xmlsoap.org/ws/2009/09/identity/claims/actor';\nasync function verifyToken(token) {\n    try {\n        return await (0,jose__WEBPACK_IMPORTED_MODULE_2__.jwtVerify)(token, new TextEncoder().encode(JWT_SECRET));\n    } catch  {\n        return null;\n    }\n}\nfunction clearCookies(response, cookieNames) {\n    cookieNames.forEach((name)=>response.cookies.set(name, '', {\n            maxAge: 0,\n            path: '/'\n        }));\n}\nasync function middleware(req) {\n    if (req.nextUrl.pathname.startsWith('/api')) {\n        const referer = req.headers.get('referer');\n        const url = new URL(req.url);\n        const baseOrigin = `${url.protocol}//${url.host}`;\n        console.log(baseOrigin);\n        console.log(req.url);\n        const isAllowed = referer?.startsWith(baseOrigin);\n        if (!isAllowed) {\n            return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse('Forbidden: API access is only allowed from site pages.', {\n                status: 403\n            });\n        }\n    }\n    const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_1__.cookies)();\n    const tokenCookie = cookieStore.get('token');\n    const otpTokenCookie = cookieStore.get('otp_token');\n    const resetTokenCookie = cookieStore.get('reset');\n    const pathname = req.nextUrl.pathname;\n    const tokensPresent = [\n        tokenCookie,\n        otpTokenCookie,\n        resetTokenCookie\n    ].filter(Boolean);\n    const response = next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n    if (tokensPresent.length > 1) {\n        clearCookies(response, [\n            'token',\n            'otp_token',\n            'reset'\n        ]);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL('/un/login', req.url));\n    }\n    const isAuthPage = [\n        '/un/login',\n        '/un/register'\n    ].some((path)=>pathname.startsWith(path));\n    const isOtpPage = pathname.startsWith('/un/otpValidatePassword');\n    const isResetPage = pathname.startsWith('/un/resetPassword');\n    const isConfirmEmailPage = pathname.startsWith('/User/VerifyEmail');\n    const isProtectedPage = pathname.startsWith('/User') || pathname.startsWith('/Admin');\n    async function verifyOrClear(tokenCookie) {\n        if (!tokenCookie) return null;\n        const decoded = await verifyToken(tokenCookie.value);\n        if (!decoded) {\n            clearCookies(response, [\n                'token',\n                'otp_token',\n                'reset'\n            ]);\n            return null;\n        }\n        return decoded;\n    }\n    // OTP page requires valid otp_token\n    if (isOtpPage) {\n        const decoded = await verifyOrClear(otpTokenCookie);\n        if (!decoded) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL('/un/login', req.url));\n        return response;\n    }\n    // Reset page requires valid reset token\n    if (isResetPage) {\n        const decoded = await verifyOrClear(resetTokenCookie);\n        if (!decoded) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL('/un/login', req.url));\n        return response;\n    }\n    // Auth pages\n    if (isAuthPage) {\n        clearCookies(response, [\n            'otp_token',\n            'reset'\n        ]);\n        if (tokenCookie) {\n            const decoded = await verifyOrClear(tokenCookie);\n            if (!decoded) return response; // âœ… Just stay on login page after clearing\n            const roles = decoded.payload[ROLE_CLAIM] || [];\n            const role = Array.isArray(roles) ? roles[0] : roles;\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL(`/${role}/dashboard`, req.url));\n        }\n        return response;\n    }\n    // Protected pages\n    if (isProtectedPage) {\n        const decoded = await verifyOrClear(tokenCookie);\n        if (!decoded) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL('/un/login', req.url));\n        const roles = decoded.payload[ROLE_CLAIM] || [];\n        const role = Array.isArray(roles) ? roles[0] : roles;\n        if (isConfirmEmailPage) {\n            const isVerified = decoded.payload[VERIFIED_CLAIM];\n            if (isVerified === 'True') {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL(`/${role}/dashboard`, req.url));\n            }\n            return response;\n        }\n        // Role-based restriction\n        if (pathname.startsWith('/Admin') && role !== 'Admin' || pathname.startsWith('/User') && role !== 'User') {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL(`/${role}/dashboard`, req.url));\n        }\n        return response;\n    }\n    return response;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./middleware.js\n");

/***/ })

});