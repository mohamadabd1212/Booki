"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./middleware.js":
/*!***********************!*\
  !*** ./middleware.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jose */ \"(middleware)/./node_modules/jose/dist/webapi/jwt/verify.js\");\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/headers */ \"(middleware)/./node_modules/next/dist/esm/api/headers.js\");\n\n\n\nconst JWT_SECRET = process.env.JWT_SECRET;\nconst ROLE_CLAIM = 'http://schemas.microsoft.com/ws/2008/06/identity/claims/role';\nconst VERIFIED_CLAIM = 'http://schemas.xmlsoap.org/ws/2009/09/identity/claims/actor';\nasync function verifyToken(token) {\n    try {\n        return await (0,jose__WEBPACK_IMPORTED_MODULE_2__.jwtVerify)(token, new TextEncoder().encode(JWT_SECRET));\n    } catch  {\n        return null;\n    }\n}\nfunction clearCookies(response, cookieNames) {\n    cookieNames.forEach((name)=>response.cookies.set(name, '', {\n            maxAge: 0,\n            path: '/'\n        }));\n}\nasync function middleware(req) {\n    const pathname = req.nextUrl.pathname;\n    const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_1__.cookies)();\n    const tokenCookie = cookieStore.get('token');\n    const otpTokenCookie = cookieStore.get('otp_token');\n    const resetTokenCookie = cookieStore.get('reset');\n    const referer = req.headers.get('referer');\n    const tokensPresent = [\n        tokenCookie,\n        otpTokenCookie,\n        resetTokenCookie\n    ].filter(Boolean);\n    const response = next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n    if (referer && !referer.startsWith('http://localhost:3000')) {\n        return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse({\n            status: 403\n        });\n    }\n    if (tokensPresent.length > 1) {\n        clearCookies(response, [\n            'token',\n            'otp_token',\n            'reset'\n        ]);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL('/un/login', req.url));\n    }\n    const isAuthPage = [\n        '/un/login',\n        '/un/register'\n    ].some((path)=>pathname.startsWith(path));\n    const isOtpPage = pathname.startsWith('/un/otpValidatePassword');\n    const isResetPage = pathname.startsWith('/un/resetPassword');\n    const isConfirmEmailPage = pathname.startsWith('/User/VerifyEmail');\n    const isProtectedPage = pathname.startsWith('/User') || pathname.startsWith('/Admin');\n    async function verifyOrClear(tokenCookie) {\n        if (!tokenCookie) return null;\n        const decoded = await verifyToken(tokenCookie.value);\n        if (!decoded) {\n            clearCookies(response, [\n                'token',\n                'otp_token',\n                'reset'\n            ]);\n            return null;\n        }\n        return decoded;\n    }\n    // OTP page requires valid otp_token\n    if (isOtpPage) {\n        const decoded = await verifyOrClear(otpTokenCookie);\n        if (!decoded) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL('/un/login', req.url));\n        return response;\n    }\n    // Reset page requires valid reset token\n    if (isResetPage) {\n        const decoded = await verifyOrClear(resetTokenCookie);\n        if (!decoded) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL('/un/login', req.url));\n        return response;\n    }\n    // Auth pages\n    if (isAuthPage) {\n        clearCookies(response, [\n            'otp_token',\n            'reset'\n        ]);\n        if (tokenCookie) {\n            const decoded = await verifyOrClear(tokenCookie);\n            if (!decoded) return response; // âœ… Just stay on login page after clearing\n            const roles = decoded.payload[ROLE_CLAIM] || [];\n            const role = Array.isArray(roles) ? roles[0] : roles;\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL(`/${role}/dashboard`, req.url));\n        }\n        return response;\n    }\n    // Protected pages\n    if (isProtectedPage) {\n        const decoded = await verifyOrClear(tokenCookie);\n        if (!decoded) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL('/un/login', req.url));\n        const roles = decoded.payload[ROLE_CLAIM] || [];\n        const role = Array.isArray(roles) ? roles[0] : roles;\n        if (isConfirmEmailPage) {\n            const isVerified = decoded.payload[VERIFIED_CLAIM];\n            if (isVerified === 'True') {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL(`/${role}/dashboard`, req.url));\n            }\n            return response;\n        }\n        // Role-based restriction\n        if (pathname.startsWith('/Admin') && role !== 'Admin' || pathname.startsWith('/User') && role !== 'User') {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.redirect(new URL(`/${role}/dashboard`, req.url));\n        }\n        return response;\n    }\n    return response;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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WUFBWWlCLFNBQVMsUUFDMUM7WUFDQSxPQUFPcEQscURBQVlBLENBQUNzQyxRQUFRLENBQUMsSUFBSUMsSUFBSSxDQUFDLENBQUMsRUFBRWEsS0FBSyxVQUFVLENBQUMsRUFBRS9CLElBQUltQixHQUFHO1FBQ3BFO1FBRUEsT0FBTzNCO0lBQ1Q7SUFFQSxPQUFPQTtBQUNUIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXE1vaGFtYWRcXE9uZURyaXZlXFxEZXNrdG9wXFxSdWhhbl9OZXh0K2FzcFxccnVoYW5cXG1pZGRsZXdhcmUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xyXG5pbXBvcnQgeyBqd3RWZXJpZnkgfSBmcm9tICdqb3NlJztcclxuaW1wb3J0IHsgY29va2llcyB9IGZyb20gJ25leHQvaGVhZGVycyc7XHJcblxyXG5jb25zdCBKV1RfU0VDUkVUID0gcHJvY2Vzcy5lbnYuSldUX1NFQ1JFVDtcclxuY29uc3QgUk9MRV9DTEFJTSA9ICdodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUnO1xyXG5jb25zdCBWRVJJRklFRF9DTEFJTSA9ICdodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA5LzA5L2lkZW50aXR5L2NsYWltcy9hY3Rvcic7XHJcblxyXG5hc3luYyBmdW5jdGlvbiB2ZXJpZnlUb2tlbih0b2tlbikge1xyXG4gIHRyeSB7XHJcbiAgICByZXR1cm4gYXdhaXQgand0VmVyaWZ5KHRva2VuLCBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUoSldUX1NFQ1JFVCkpO1xyXG4gIH0gY2F0Y2gge1xyXG4gICAgcmV0dXJuIG51bGw7XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBjbGVhckNvb2tpZXMocmVzcG9uc2UsIGNvb2tpZU5hbWVzKSB7XHJcbiAgY29va2llTmFtZXMuZm9yRWFjaChuYW1lID0+XHJcbiAgICByZXNwb25zZS5jb29raWVzLnNldChuYW1lLCAnJywge1xyXG4gICAgICBtYXhBZ2U6IDAsXHJcbiAgICAgIHBhdGg6ICcvJyxcclxuICAgIH0pXHJcbiAgKTtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1pZGRsZXdhcmUocmVxKSB7XHJcbiAgY29uc3QgcGF0aG5hbWUgPSByZXEubmV4dFVybC5wYXRobmFtZTtcclxuICBjb25zdCBjb29raWVTdG9yZSA9IGF3YWl0IGNvb2tpZXMoKTtcclxuICBjb25zdCB0b2tlbkNvb2tpZSA9IGNvb2tpZVN0b3JlLmdldCgndG9rZW4nKTtcclxuICBjb25zdCBvdHBUb2tlbkNvb2tpZSA9IGNvb2tpZVN0b3JlLmdldCgnb3RwX3Rva2VuJyk7XHJcbiAgY29uc3QgcmVzZXRUb2tlbkNvb2tpZSA9IGNvb2tpZVN0b3JlLmdldCgncmVzZXQnKTtcclxuICBjb25zdCByZWZlcmVyID0gcmVxLmhlYWRlcnMuZ2V0KCdyZWZlcmVyJyk7XHJcbiAgY29uc3QgdG9rZW5zUHJlc2VudCA9IFt0b2tlbkNvb2tpZSwgb3RwVG9rZW5Db29raWUsIHJlc2V0VG9rZW5Db29raWVdLmZpbHRlcihCb29sZWFuKTtcclxuICBjb25zdCByZXNwb25zZSA9IE5leHRSZXNwb25zZS5uZXh0KCk7XHJcbmlmIChyZWZlcmVyICYmICFyZWZlcmVyLnN0YXJ0c1dpdGgoJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMCcpKSB7XHJcbiAgICByZXR1cm4gbmV3IE5leHRSZXNwb25zZSggeyBzdGF0dXM6IDQwMyB9KTtcclxuICB9XHJcbiAgaWYgKHRva2Vuc1ByZXNlbnQubGVuZ3RoID4gMSkge1xyXG4gICAgY2xlYXJDb29raWVzKHJlc3BvbnNlLCBbJ3Rva2VuJywgJ290cF90b2tlbicsICdyZXNldCddKTtcclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QobmV3IFVSTCgnL3VuL2xvZ2luJywgcmVxLnVybCkpO1xyXG4gIH1cclxuXHJcbiAgY29uc3QgaXNBdXRoUGFnZSA9IFsnL3VuL2xvZ2luJywgJy91bi9yZWdpc3RlciddLnNvbWUocGF0aCA9PiBwYXRobmFtZS5zdGFydHNXaXRoKHBhdGgpKTtcclxuICBjb25zdCBpc090cFBhZ2UgPSBwYXRobmFtZS5zdGFydHNXaXRoKCcvdW4vb3RwVmFsaWRhdGVQYXNzd29yZCcpO1xyXG4gIGNvbnN0IGlzUmVzZXRQYWdlID0gcGF0aG5hbWUuc3RhcnRzV2l0aCgnL3VuL3Jlc2V0UGFzc3dvcmQnKTtcclxuICBjb25zdCBpc0NvbmZpcm1FbWFpbFBhZ2UgPSBwYXRobmFtZS5zdGFydHNXaXRoKCcvVXNlci9WZXJpZnlFbWFpbCcpO1xyXG4gIGNvbnN0IGlzUHJvdGVjdGVkUGFnZSA9IHBhdGhuYW1lLnN0YXJ0c1dpdGgoJy9Vc2VyJykgfHwgcGF0aG5hbWUuc3RhcnRzV2l0aCgnL0FkbWluJyk7XHJcblxyXG4gIGFzeW5jIGZ1bmN0aW9uIHZlcmlmeU9yQ2xlYXIodG9rZW5Db29raWUpIHtcclxuICAgIGlmICghdG9rZW5Db29raWUpIHJldHVybiBudWxsO1xyXG4gICAgY29uc3QgZGVjb2RlZCA9IGF3YWl0IHZlcmlmeVRva2VuKHRva2VuQ29va2llLnZhbHVlKTtcclxuICAgIGlmICghZGVjb2RlZCkge1xyXG4gICAgICBjbGVhckNvb2tpZXMocmVzcG9uc2UsIFsndG9rZW4nLCAnb3RwX3Rva2VuJywgJ3Jlc2V0J10pO1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuICAgIHJldHVybiBkZWNvZGVkO1xyXG4gIH1cclxuXHJcbiAgLy8gT1RQIHBhZ2UgcmVxdWlyZXMgdmFsaWQgb3RwX3Rva2VuXHJcbiAgaWYgKGlzT3RwUGFnZSkge1xyXG4gICAgY29uc3QgZGVjb2RlZCA9IGF3YWl0IHZlcmlmeU9yQ2xlYXIob3RwVG9rZW5Db29raWUpO1xyXG4gICAgaWYgKCFkZWNvZGVkKSByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KG5ldyBVUkwoJy91bi9sb2dpbicsIHJlcS51cmwpKTtcclxuICAgIHJldHVybiByZXNwb25zZTtcclxuICB9XHJcblxyXG4gIC8vIFJlc2V0IHBhZ2UgcmVxdWlyZXMgdmFsaWQgcmVzZXQgdG9rZW5cclxuICBpZiAoaXNSZXNldFBhZ2UpIHtcclxuICAgIGNvbnN0IGRlY29kZWQgPSBhd2FpdCB2ZXJpZnlPckNsZWFyKHJlc2V0VG9rZW5Db29raWUpO1xyXG4gICAgaWYgKCFkZWNvZGVkKSByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KG5ldyBVUkwoJy91bi9sb2dpbicsIHJlcS51cmwpKTtcclxuICAgIHJldHVybiByZXNwb25zZTtcclxuICB9XHJcblxyXG4gIC8vIEF1dGggcGFnZXNcclxuICBpZiAoaXNBdXRoUGFnZSkge1xyXG4gICAgY2xlYXJDb29raWVzKHJlc3BvbnNlLCBbJ290cF90b2tlbicsICdyZXNldCddKTtcclxuXHJcbiAgICBpZiAodG9rZW5Db29raWUpIHtcclxuICAgICAgY29uc3QgZGVjb2RlZCA9IGF3YWl0IHZlcmlmeU9yQ2xlYXIodG9rZW5Db29raWUpO1xyXG4gICAgICBpZiAoIWRlY29kZWQpIHJldHVybiByZXNwb25zZTsgLy8g4pyFIEp1c3Qgc3RheSBvbiBsb2dpbiBwYWdlIGFmdGVyIGNsZWFyaW5nXHJcblxyXG4gICAgICBjb25zdCByb2xlcyA9IGRlY29kZWQucGF5bG9hZFtST0xFX0NMQUlNXSB8fCBbXTtcclxuICAgICAgY29uc3Qgcm9sZSA9IEFycmF5LmlzQXJyYXkocm9sZXMpID8gcm9sZXNbMF0gOiByb2xlcztcclxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdChuZXcgVVJMKGAvJHtyb2xlfS9kYXNoYm9hcmRgLCByZXEudXJsKSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gcmVzcG9uc2U7XHJcbiAgfVxyXG5cclxuICAvLyBQcm90ZWN0ZWQgcGFnZXNcclxuICBpZiAoaXNQcm90ZWN0ZWRQYWdlKSB7XHJcbiAgICBjb25zdCBkZWNvZGVkID0gYXdhaXQgdmVyaWZ5T3JDbGVhcih0b2tlbkNvb2tpZSk7XHJcbiAgICBpZiAoIWRlY29kZWQpIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QobmV3IFVSTCgnL3VuL2xvZ2luJywgcmVxLnVybCkpO1xyXG5cclxuICAgIGNvbnN0IHJvbGVzID0gZGVjb2RlZC5wYXlsb2FkW1JPTEVfQ0xBSU1dIHx8IFtdO1xyXG4gICAgY29uc3Qgcm9sZSA9IEFycmF5LmlzQXJyYXkocm9sZXMpID8gcm9sZXNbMF0gOiByb2xlcztcclxuXHJcbiAgICBpZiAoaXNDb25maXJtRW1haWxQYWdlKSB7XHJcbiAgICAgIGNvbnN0IGlzVmVyaWZpZWQgPSBkZWNvZGVkLnBheWxvYWRbVkVSSUZJRURfQ0xBSU1dO1xyXG4gICAgICBpZiAoaXNWZXJpZmllZCA9PT0gJ1RydWUnKSB7XHJcbiAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdChuZXcgVVJMKGAvJHtyb2xlfS9kYXNoYm9hcmRgLCByZXEudXJsKSk7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIHJlc3BvbnNlO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFJvbGUtYmFzZWQgcmVzdHJpY3Rpb25cclxuICAgIGlmIChcclxuICAgICAgKHBhdGhuYW1lLnN0YXJ0c1dpdGgoJy9BZG1pbicpICYmIHJvbGUgIT09ICdBZG1pbicpIHx8XHJcbiAgICAgIChwYXRobmFtZS5zdGFydHNXaXRoKCcvVXNlcicpICYmIHJvbGUgIT09ICdVc2VyJylcclxuICAgICkge1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KG5ldyBVUkwoYC8ke3JvbGV9L2Rhc2hib2FyZGAsIHJlcS51cmwpKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gcmVzcG9uc2U7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gcmVzcG9uc2U7XHJcbn1cclxuIl0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsImp3dFZlcmlmeSIsImNvb2tpZXMiLCJKV1RfU0VDUkVUIiwicHJvY2VzcyIsImVudiIsIlJPTEVfQ0xBSU0iLCJWRVJJRklFRF9DTEFJTSIsInZlcmlmeVRva2VuIiwidG9rZW4iLCJUZXh0RW5jb2RlciIsImVuY29kZSIsImNsZWFyQ29va2llcyIsInJlc3BvbnNlIiwiY29va2llTmFtZXMiLCJmb3JFYWNoIiwibmFtZSIsInNldCIsIm1heEFnZSIsInBhdGgiLCJtaWRkbGV3YXJlIiwicmVxIiwicGF0aG5hbWUiLCJuZXh0VXJsIiwiY29va2llU3RvcmUiLCJ0b2tlbkNvb2tpZSIsImdldCIsIm90cFRva2VuQ29va2llIiwicmVzZXRUb2tlbkNvb2tpZSIsInJlZmVyZXIiLCJoZWFkZXJzIiwidG9rZW5zUHJlc2VudCIsImZpbHRlciIsIkJvb2xlYW4iLCJuZXh0Iiwic3RhcnRzV2l0aCIsInN0YXR1cyIsImxlbmd0aCIsInJlZGlyZWN0IiwiVVJMIiwidXJsIiwiaXNBdXRoUGFnZSIsInNvbWUiLCJpc090cFBhZ2UiLCJpc1Jlc2V0UGFnZSIsImlzQ29uZmlybUVtYWlsUGFnZSIsImlzUHJvdGVjdGVkUGFnZSIsInZlcmlmeU9yQ2xlYXIiLCJkZWNvZGVkIiwidmFsdWUiLCJyb2xlcyIsInBheWxvYWQiLCJyb2xlIiwiQXJyYXkiLCJpc0FycmF5IiwiaXNWZXJpZmllZCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./middleware.js\n");

/***/ })

});